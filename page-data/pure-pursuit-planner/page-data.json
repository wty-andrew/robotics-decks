{"componentChunkName":"component---node-modules-gatsby-theme-mdx-deck-src-templates-deck-js","path":"/pure-pursuit-planner","matchPath":"/pure-pursuit-planner/*","result":{"data":{"deck":{"id":"d68e3c6f-c8d5-5a2a-aaf5-96861c150fdc","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    \\begin{aligned}\\n    & x^2 + y^2 = l^2 \\\\\\n    & x + d     = r \\\\\\n    & d^2 + y^2 = r^2 \\\\\\n    \\\\\\n    & (r - x)^2 + y^2 = r^2 \\\\\\n    & r^2 - 2rx + l^2 = r^2 \\\\\\n    & r = \\frac{l^2}{2x} , (gamma = \\frac{2x}{l^2})\\n    end{aligned}\\n\"], [\"\\n    \\\\begin{aligned}\\n    & x^2 + y^2 = l^2 \\\\\\\\\\n    & x + d     = r \\\\\\\\\\n    & d^2 + y^2 = r^2 \\\\\\\\\\n    \\\\\\\\\\n    & (r - x)^2 + y^2 = r^2 \\\\\\\\\\n    & r^2 - 2rx + l^2 = r^2 \\\\\\\\\\n    & r = \\\\frac{l^2}{2x} \\\\, (\\\\gamma = \\\\frac{2x}{l^2})\\n    \\\\end{aligned}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar theme = customTheme;\nvar _frontmatter = {};\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Hero, {\n    title: \"Pure Pursuit Planner\",\n    mdxType: \"Hero\"\n  }), mdx(\"hr\", null), mdx(\"h2\", null, \"Pure Pursuit Algorithm\"), mdx(\"div\", {\n    style: {\n      fontSize: '0.95em'\n    }\n  }, mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Find a point on the path with some distance ahead of the robot\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Rotate in place toward the lookahead point if the angle is too large\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Calcuate the curvature that will drive the robot toward the lookahead point\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Send velocity command based on the curvature\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Repeat above steps until goal position reached\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Rotate in place toward the goal orientation\"))), mdx(\"hr\", null), mdx(\"h2\", null, \"Pure Pursuit Algorithm\"), mdx(\"img\", {\n    src: lookaheadAlgorithmImg,\n    style: {\n      maxHeight: '70vh',\n      objectFit: 'contain'\n    }\n  }), mdx(\"hr\", null), mdx(\"h2\", null, \"Geometry\"), mdx(\"span\", null, \"Relationship between curvature and lookahead distance\"), mdx(\"div\", {\n    style: {\n      display: 'flex'\n    }\n  }, mdx(\"img\", {\n    src: geometryImg,\n    style: {\n      maxWidth: '40vw',\n      objectFit: 'contain'\n    }\n  }), mdx(Tex, {\n    block: true,\n    style: {\n      marginLeft: '5vw',\n      fontSize: '0.9em'\n    },\n    mdxType: \"Tex\"\n  }, String.raw(_templateObject()))), mdx(\"hr\", null), mdx(\"h2\", null, \"References\"), mdx(\"div\", {\n    style: {\n      fontSize: '.8em'\n    }\n  }, mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Coulter, R.C. (1992). Implementation of the Pure Pursuit Path Tracking Algorithm.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"M. Felix, asr_ftc_local_planner, (2018), ROS Wiki, \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://wiki.ros.org/asr_ftc_local_planner\"\n  }), \"http://wiki.ros.org/asr_ftc_local_planner\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"S. Singh, S. Macenski, nav2_regulated_pure_pursuit_controller, (2021), GitHub repository, \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/ros-planning/navigation2/tree/main/nav2_regulated_pure_pursuit_controller\"\n  }), \"https://github.com/ros-planning/navigation2/tree/main/nav2_regulated_pure_pursuit_controller\")))));\n}\n;\nMDXContent.isMDXComponent = true;","title":"Pure Pursuit Algorithm"}},"pageContext":{"matchPath":"/pure-pursuit-planner/*","id":"d68e3c6f-c8d5-5a2a-aaf5-96861c150fdc","slug":"/robotics-decks/pure-pursuit-planner","title":"Pure Pursuit Algorithm"}},"staticQueryHashes":[]}